{"version":3,"sources":["routes.js","components/Navigation.js","components/AppBar.js","components/Layout.js","services/fetchApi.js","components/MovieListItem.js","components/MovieList.js","components/Spinner.js","components/Notification.js","views/HomePage.js","utils/parseQueryString.js","components/SearchBar.js","views/MoviesPage.js","components/DetailsNavigation.js","components/CastItem.js","views/Cast.js","views/Reviews.js","components/Button.js","views/MovieDetailsPage.js","components/App.js","index.js"],"names":["Nav","styled","nav","Item","NavLink","attrs","props","activeClassName","Navigation","to","routes","exact","Header","header","Appbar","Container","div","Layout","children","AppBar","key","baseURL","fetch","then","res","json","catch","console","log","query","id","li","Overlay","MovieRate","MovieTitle","p","MoviePoster","img","src","alt","MovieListItem","title","votes","releaseDate","poster","location","pathname","state","from","slice","defaultProps","List","ul","MovieList","moviesList","map","vote_average","release_date","poster_path","SpinnerContainer","Spinner","type","color","height","width","Text","Notification","message","Title","h1","HomePage","moviesTrends","loading","error","this","setState","fetchApi","results","finally","length","Component","getQueryParams","StringURL","queryString","parse","SearchForm","form","Button","button","Label","span","Input","input","SearchBar","inputValue","handleInput","value","target","handleSubmit","e","preventDefault","handleChangeQuery","onSubmit","onChange","placeholder","autocomplete","autoFocus","required","name","Movies","completeSearch","fetchMoviesOnSearchQuery","setTimeout","history","push","search","prevProps","prevState","prevQuery","nextQuery","ListItem","DetailsNavigation","castMatch","reviewMatch","ProfileAvatar","CastItem","avatar","character","MovieCast","cast","match","params","movieId","profile_path","h3","MovieReviews","reviews","review","author","content","CreateButton","text","handleClick","onClick","SemiTitle","h2","MovieDetailsPage","exactMovie","handleGoBack","result","genres","join","overview","url","path","component","Cast","Reviews","App","MoviesPage","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.06e640a7.chunk.js","sourcesContent":["export default {\r\n  home: '/',\r\n  movies: '/movies',\r\n  movieDetails: '/movies/:movieId',\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../routes';\r\n\r\nconst Nav = styled.nav`\r\n  padding: 2rem 4rem;\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled(NavLink).attrs(props => ({\r\n  activeClassName: props.activeClassName || 'activeLink',\r\n}))`\r\n  font-size: 3rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  color: #333333;\r\n  transition: color 0.2s linear;\r\n\r\n  &:not(:first-of-type) {\r\n    margin-left: 2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #4a70f7;\r\n  }\r\n`;\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <Nav>\r\n      <Item to={routes.home} exact>\r\n        Home\r\n      </Item>\r\n      <Item to={routes.movies}>Movies</Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Navigation from './Navigation';\r\n\r\nconst Header = styled.header`\r\n  width: 100%;\r\n  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.75);\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nconst Appbar = () => (\r\n  <Header>\r\n    <Navigation />\r\n  </Header>\r\n);\r\n\r\nexport default Appbar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AppBar from './AppBar';\r\n\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <Container>\r\n    <AppBar />\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default Layout;\r\n","const key = '259c02d1f1f516a6001436d2cce8084d';\r\nconst baseURL = 'https://api.themoviedb.org/3';\r\nconst dayTrendingURL = '/trending/movie/day';\r\n\r\nexport default {\r\n  fetchTrendMovies() {\r\n    return fetch(`${baseURL}${dayTrendingURL}?api_key=${key}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n\r\n  fetchSearchedFilms(query) {\r\n    return fetch(`${baseURL}/search/movie?api_key=${key}&query=${query}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n\r\n  fetchMovieDetails(id) {\r\n    return fetch(`${baseURL}/movie/${id}?api_key=${key}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n\r\n  fetchMovieCast(id) {\r\n    return fetch(`${baseURL}/movie/${id}/credits?api_key=${key}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n\r\n  fetchMovieReviews(id) {\r\n    return fetch(`${baseURL}/movie/${id}/reviews?api_key=${key}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n\r\n  fetchPopularFilms() {\r\n    return fetch(`${baseURL}/movie/popular?api_key=${key}`)\r\n      .then(res => res.json())\r\n      .catch(console.log);\r\n  },\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = styled.li`\r\n  position: relative;\r\n  flex-basis: 306px;\r\n  height: 156px;\r\n  border-radius: 10px;\r\n  margin-bottom: 3rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    height: 200px;\r\n    flex-basis: 40%;\r\n    margin-right: 10px;\r\n    margin-bottom: 6rem;\r\n  }\r\n\r\n  @media screen and (min-width: 64em) {\r\n    height: 400px;\r\n    flex-basis: 21%;\r\n    margin-right: 0;\r\n    margin-bottom: 4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 75em) {\r\n    height: 500px;\r\n  }\r\n\r\n  @media screen and (min-width: 90em) {\r\n    flex-basis: 18%;\r\n  }\r\n\r\n  @media screen and (min-width: 105em) {\r\n    flex-basis: 17%;\r\n    height: 700;\r\n  }\r\n`;\r\n\r\nconst Overlay = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  border-radius: 10px;\r\n  background: linear-gradient(\r\n    to bottom,\r\n    rgba(255, 255, 255, 0) 0%,\r\n    rgba(240, 240, 240, 0) 50%,\r\n    rgba(71, 71, 71, 0.5) 73%,\r\n    rgba(17, 17, 17, 0.5) 85%,\r\n    rgba(19, 19, 19, 0.5) 100%\r\n  );\r\n  cursor: pointer;\r\n`;\r\n\r\nconst MovieRate = styled.div`\r\n  position: absolute;\r\n  font-weight: 500;\r\n  width: 30px;\r\n  height: 16px;\r\n  border-radius: 6px;\r\n  right: 8px;\r\n  top: 8px;\r\n  line-height: 16px;\r\n  font-size: 1.4rem;\r\n  color: #333333;\r\n  background-color: snow;\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: 75em) {\r\n    border-radius: 8px;\r\n    width: 40px;\r\n    height: 18px;\r\n    line-height: 20px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst MovieTitle = styled.p`\r\n  position: absolute;\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  color: snow;\r\n  bottom: 2rem;\r\n  left: 10px;\r\n`;\r\n\r\nconst MoviePoster = styled.img.attrs(props => ({\r\n  src:\r\n    props.src ||\r\n    'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png',\r\n\r\n  alt: `Poster of ${props.alt}` || 'Poster',\r\n}))`\r\n  object-fit: cover;\r\n  height: 100%;\r\n`;\r\n\r\nfunction MovieListItem({ id, title, votes, releaseDate, poster, location }) {\r\n  if (poster) {\r\n    poster = `http://image.tmdb.org/t/p/w500${poster}`;\r\n  }\r\n  return (\r\n    <Item>\r\n      <Link\r\n        to={{ pathname: `${routes.movies}/${id}`, state: { from: location } }}\r\n      >\r\n        <Overlay>\r\n          <MovieRate>{votes}</MovieRate>\r\n          <MovieTitle>\r\n            {title} ({releaseDate.slice(0, 4)})\r\n          </MovieTitle>\r\n        </Overlay>\r\n        <MoviePoster src={poster} alt={title} />\r\n      </Link>\r\n    </Item>\r\n  );\r\n}\r\n\r\nMovieListItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  votes: PropTypes.number.isRequired,\r\n  releaseDate: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  location: PropTypes.object,\r\n};\r\n\r\nMovieListItem.defaultProps = {\r\n  poster:\r\n    'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png',\r\n  votes: 0,\r\n};\r\n\r\nexport default MovieListItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MovieListItem from '../components/MovieListItem';\r\n\r\nconst List = styled.ul`\r\n  min-width: 320px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nfunction MovieList({ moviesList, location }) {\r\n  return (\r\n    <List>\r\n      {moviesList.map(\r\n        ({ id, vote_average, title, release_date, poster_path }) => (\r\n          <MovieListItem\r\n            key={id}\r\n            id={id}\r\n            title={title}\r\n            votes={vote_average}\r\n            releaseDate={release_date}\r\n            poster={poster_path}\r\n            location={location}\r\n          />\r\n        ),\r\n      )}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst SpinnerContainer = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  top: 30%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  z-index: 1100;\r\n  width: 18rem;\r\n  height: 18rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <SpinnerContainer>\r\n      <Loader type=\"ThreeDots\" color=\"#ff1212\" height={144} width={144} />\r\n    </SpinnerContainer>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Text = styled.p`\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  font-weight: 700;\r\n  margin-top: 8rem;\r\n  font-size: 2rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 3rem;\r\n  }\r\n  @media screen and (min-width: 64em) {\r\n    font-size: 4rem;\r\n  }\r\n`;\r\n\r\nfunction Notification({ message }) {\r\n  return <Text>{message}</Text>;\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport fetchApi from '../services/fetchApi';\r\nimport MovieList from '../components/MovieList';\r\nimport Spinner from '../components/Spinner';\r\nimport Notification from '../components/Notification';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 92vw;\r\n  min-width: 30rem;\r\n  max-width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: inline-block;\r\n  margin-left: 5%;\r\n  font-size: 4rem;\r\n  font-weight: 500;\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    moviesTrends: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    fetchApi\r\n      .fetchTrendMovies()\r\n      .then(({ results }) => {\r\n        this.setState({\r\n          moviesTrends: results,\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(\r\n        this.setState({\r\n          loading: false,\r\n        }),\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { moviesTrends, loading, error } = this.state;\r\n    const { location } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        {error ? (\r\n          <Notification\r\n            message={`Whoops... something went wrong: ${error.message}`}\r\n          />\r\n        ) : (\r\n          <Title>Trending today</Title>\r\n        )}\r\n        {loading && <Spinner />}\r\n        {moviesTrends.length > 0 && (\r\n          <MovieList moviesList={moviesTrends} location={location} />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import queryString from 'query-string';\r\n\r\nexport default function getQueryParams(StringURL) {\r\n  return queryString.parse(StringURL);\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10%;\r\n  width: 100%;\r\n  max-width: 60rem;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  border: 0.1rem solid #333333;\r\n  overflow: hidden;\r\n  transition: box-shadow 0.2s linear;\r\n  margin-bottom: 5rem;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.75);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  width: 5.6rem;\r\n  height: 5rem;\r\n  border: 0;\r\n  border-top-right-radius: 0.3rem;\r\n  border-bottom-right-radius: 0.3rem;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-color: snow;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n    background-color: tomato;\r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 5rem;\r\n  font-size: 2rem;\r\n  background-color: snow;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 1.4rem;\r\n  padding-right: 1rem;\r\n\r\n  &::placeholder {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleInput = ({ target: { value } }) => {\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { inputValue } = this.state;\r\n    this.props.handleChangeQuery(inputValue);\r\n\r\n    this.setState({\r\n      inputValue: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    return (\r\n      <SearchForm onSubmit={this.handleSubmit}>\r\n        <Input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={this.handleInput}\r\n          placeholder=\"Search images and photos\"\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          required\r\n          name=\"searchInput\"\r\n        ></Input>\r\n        <Button type=\"submit\">\r\n          <Label> Search </Label>\r\n        </Button>\r\n      </SearchForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport getQueryParams from '../utils/parseQueryString';\r\nimport fetchApi from '../services/fetchApi';\r\nimport ListOfMovies from '../components/MovieList';\r\nimport SearchBar from '../components/SearchBar';\r\nimport Spinner from '../components/Spinner';\r\nimport Notification from '../components/Notification';\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  width: 92vw;\r\n  min-width: 30rem;\r\n  max-width: 100%;\r\n`;\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    moviesList: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { location } = this.props;\r\n    const { query } = getQueryParams(location.search);\r\n    if (query) {\r\n      return this.fetchMoviesOnSearchQuery(query);\r\n    }\r\n    fetchApi\r\n      .fetchPopularFilms()\r\n      .then(({ results }) => {\r\n        this.setState({\r\n          moviesList: results,\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(setTimeout(this.completeSearch, 200));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { location } = this.props;\r\n\r\n    const { query: prevQuery } = getQueryParams(prevProps.location.search);\r\n    const { query: nextQuery } = getQueryParams(location.search);\r\n    if (prevQuery !== nextQuery) {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n      return this.fetchMoviesOnSearchQuery(nextQuery);\r\n    }\r\n  }\r\n\r\n  completeSearch = () => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  fetchMoviesOnSearchQuery = query => {\r\n    this.setState({\r\n      loading: false,\r\n    });\r\n\r\n    fetchApi\r\n      .fetchSearchedFilms(query)\r\n      .then(({ results }) => {\r\n        this.setState({\r\n          moviesList: results,\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(setTimeout(this.completeSearch, 200));\r\n  };\r\n\r\n  handleChangeQuery = query => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `query=${query}`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { moviesList, loading, error } = this.state;\r\n    const { location } = this.props;\r\n\r\n    return (\r\n      <Container>\r\n        <SearchBar handleChangeQuery={this.handleChangeQuery} />\r\n        {error && (\r\n          <Notification\r\n            message={`Whoops... something went wrong: ${error.message}`}\r\n          />\r\n        )}\r\n        {loading && <Spinner />}\r\n        {moviesList.length > 0 && (\r\n          <ListOfMovies moviesList={moviesList} location={location} />\r\n        )}\r\n        {moviesList.length === 0 && !loading && (\r\n          <Notification\r\n            message={`There are no such movies... Try another one :)`}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = styled.nav`\r\n  padding: 2rem 4rem;\r\n  width: 100%;\r\n  margin-bottom: 4rem;\r\n  display: flex;\r\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst ListItem = styled(NavLink).attrs(props => ({\r\n  activeClassName: props.activeClassName || 'activeLink',\r\n}))`\r\n  font-size: 2.4rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  color: #333333;\r\n  transition: color 0.2s linear;\r\n\r\n  &:not(:first-of-type) {\r\n    margin-left: 2rem;\r\n  }\r\n\r\n  &:hover {\r\n    color: #4a70f7;\r\n  }\r\n`;\r\n\r\nfunction DetailsNavigation({ castMatch, reviewMatch }) {\r\n  return (\r\n    <List>\r\n      <ListItem to={castMatch}>Cast</ListItem>\r\n      <ListItem to={reviewMatch}>Reviews</ListItem>\r\n    </List>\r\n  );\r\n}\r\n\r\nDetailsNavigation.propTypes = {\r\n  castMatch: PropTypes.string.isRequired,\r\n  reviewMatch: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DetailsNavigation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 43%;\r\n  max-width: 20rem;\r\n  height: 20rem;\r\n  border-radius: 10px;\r\n  margin-bottom: 10rem;\r\n\r\n  @media screen and (min-width: 30em) {\r\n    width: 32%;\r\n    height: 24rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    height: 30rem;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: 64em) {\r\n    height: 400px;\r\n    width: 19%;\r\n    max-width: 30rem;\r\n    margin-bottom: 8rem;\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 75em) {\r\n    height: 40rem;\r\n  }\r\n\r\n  @media screen and (min-width: 90em) {\r\n    width: 16%;\r\n  }\r\n\r\n  @media screen and (min-width: 105em) {\r\n    width: 13%;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1.6rem;\r\n\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 0.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst ProfileAvatar = styled.img.attrs(props => ({\r\n  src:\r\n    props.src ||\r\n    'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png',\r\n\r\n  alt: `Avatar of ${props.alt}` || 'Avatar',\r\n}))`\r\n  margin: 0 auto;\r\n  margin-bottom: 0.6rem;\r\n  min-width: 7rem;\r\n  max-width: 30rem;\r\n  object-fit: cover;\r\n  height: 100%;\r\n`;\r\n\r\nfunction CastItem({ avatar, name, character }) {\r\n  if (avatar) {\r\n    avatar = `http://image.tmdb.org/t/p/w500${avatar}`;\r\n  }\r\n  return (\r\n    <Item>\r\n      <ProfileAvatar src={avatar} alt={name} />\r\n      <Text>{name}</Text>\r\n      <Text>Character: {character}</Text>\r\n    </Item>\r\n  );\r\n}\r\n\r\nCastItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n};\r\n\r\nCastItem.defaultProps = {\r\n  avatar:\r\n    'https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png',\r\n  name: 'Unknown',\r\n};\r\n\r\nexport default CastItem;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport fetchApi from '../services/fetchApi';\r\nimport CastItem from '../components/CastItem';\r\nimport Spinner from '../components/Spinner';\r\nimport Notification from '../components/Notification';\r\n\r\nconst List = styled.ul`\r\n  min-width: 320px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.6rem;\r\n  }\r\n`;\r\n\r\nclass MovieCast extends Component {\r\n  state = {\r\n    cast: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { match } = this.props;\r\n    fetchApi\r\n      .fetchMovieCast(match.params.movieId)\r\n      .then(({ cast }) =>\r\n        this.setState({\r\n          cast,\r\n        }),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(\r\n        this.setState({\r\n          loading: false,\r\n        }),\r\n      );\r\n  }\r\n  render() {\r\n    const { cast, loading, error } = this.state;\r\n    return (\r\n      <>\r\n        {error && (\r\n          <Notification\r\n            message={`Whoops... something went wrong: ${error.message}`}\r\n          />\r\n        )}\r\n        {loading && <Spinner />}\r\n        {cast && cast.length > 0 ? (\r\n          <List>\r\n            {cast.map(({ id, name, profile_path, character }) => (\r\n              <CastItem\r\n                key={id}\r\n                avatar={profile_path}\r\n                name={name}\r\n                character={character}\r\n              />\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Text>There are no cast for this movie</Text>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCast;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport fetchApi from '../services/fetchApi';\r\nimport Spinner from '../components/Spinner';\r\nimport Notification from '../components/Notification';\r\n\r\nconst List = styled.ul`\r\n  min-width: 320px;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  max-width: 90%;\r\n  margin-left: 5%;\r\n  margin-bottom: 6rem;\r\n  &:not(:last-of-type) {\r\n    padding-bottom: 4rem;\r\n    border-bottom: 0.4rem solid #333333;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 2rem 0;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.6rem;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1.6rem;\r\n\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 0.4rem;\r\n  }\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2rem;\r\n    line-height: 3rem;\r\n  }\r\n`;\r\n\r\nclass MovieReviews extends Component {\r\n  state = {\r\n    reviews: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { match } = this.props;\r\n    fetchApi\r\n      .fetchMovieReviews(match.params.movieId)\r\n      .then(({ results }) =>\r\n        this.setState({\r\n          reviews: results,\r\n        }),\r\n      )\r\n      .catch(error => this.setState({ error }))\r\n      .finally(\r\n        this.setState({\r\n          loading: false,\r\n        }),\r\n      );\r\n  }\r\n  render() {\r\n    const { reviews, loading, error } = this.state;\r\n    return (\r\n      <>\r\n        {error && (\r\n          <Notification\r\n            message={`Whoops... something went wrong: ${error.message}`}\r\n          />\r\n        )}\r\n        {loading && <Spinner />}\r\n        {reviews &&\r\n          (reviews.length > 0 ? (\r\n            <List>\r\n              {reviews.map(review => (\r\n                <ListItem key={review.id}>\r\n                  <Title>{review.author}</Title>\r\n                  <Text>{review.content}</Text>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : (\r\n            <Title>There are no reviews for this movie :(</Title>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieReviews;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  width: 88vw;\r\n  min-width: 20rem;\r\n  max-width: 30rem;\r\n  margin-left: 5%;\r\n  margin-bottom: 3rem;\r\n  padding: 1.8rem 0;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0 0 4px 1px #273b3a;\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  border-radius: 8px;\r\n  background-color: snow;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #77c1bb;\r\n    color: #f3f6f6;\r\n    transition: all 0.3s ease 0s;\r\n  }\r\n  &:active {\r\n    background-color: #00de2c;\r\n    color: #f3f6f6;\r\n    box-shadow: 0 0 3px 3px #273b3a;\r\n  }\r\n`;\r\n\r\nfunction CreateButton({ text, handleClick }) {\r\n  return <Button onClick={handleClick}>{text}</Button>;\r\n}\r\n\r\nCreateButton.propTypes = {\r\n  text: PropTypes.string,\r\n  handleClick: PropTypes.func,\r\n};\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport fetchApi from '../services/fetchApi';\r\nimport routes from '../routes';\r\nimport DetailsNavigation from '../components/DetailsNavigation';\r\nimport Cast from './Cast';\r\nimport Reviews from './Reviews';\r\nimport Button from '../components/Button';\r\nimport Spinner from '../components/Spinner';\r\nimport Notification from '../components/Notification';\r\n\r\nconst Container = styled.div`\r\n  width: 88vw;\r\n  min-width: 30rem;\r\n  max-width: 100%;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  margin-bottom: 4rem;\r\n`;\r\n\r\nconst MoviePoster = styled.img.attrs(props => ({\r\n  src:\r\n    `http://image.tmdb.org/t/p/w500${props.src}` ||\r\n    'https://image.shutterstock.com/image-vector/no-image-available-icon-vector-260nw-1323742826.jpg',\r\n\r\n  alt: `Poster of ${props.alt}` || 'Poster',\r\n}))`\r\n  margin: 0 auto;\r\n  min-width: 20rem;\r\n  max-width: 40rem;\r\n  object-fit: cover;\r\n  height: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: inline-block;\r\n  margin: 2rem auto;\r\n  font-size: 2rem;\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.6rem;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  min-width: 220px;\r\n  width: 40%;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    width: 45%;\r\n  }\r\n\r\n  @media screen and (min-width: 64em) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 3rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 1.6rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst SemiTitle = styled.h2`\r\n  font-size: 1.8rem;\r\n  font-weight: 500;\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (min-width: 48em) {\r\n    font-size: 2.4rem;\r\n  }\r\n`;\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    exactMovie: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    const { match } = this.props;\r\n    fetchApi\r\n      .fetchMovieDetails(match.params.movieId)\r\n      .then(result => {\r\n        this.setState({\r\n          exactMovie: result,\r\n        });\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(\r\n        this.setState({\r\n          loading: false,\r\n        }),\r\n      );\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const {\r\n      location: { state },\r\n      history,\r\n    } = this.props;\r\n\r\n    if (state && state.from) {\r\n      return history.push(state.from);\r\n    }\r\n    history.push(routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const { exactMovie, loading, error } = this.state;\r\n    const { match } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Button text=\"⬅ Back\" handleClick={this.handleGoBack} />\r\n        {error && (\r\n          <Notification\r\n            message={`Whoops... something went wrong: ${error.message}`}\r\n          />\r\n        )}\r\n        {exactMovie && (\r\n          <>\r\n            <Container>\r\n              {loading && <Spinner />}\r\n              <MoviePoster\r\n                src={exactMovie.poster_path}\r\n                alt={exactMovie.title}\r\n              />\r\n              <List>\r\n                <ListItem>\r\n                  <Title>\r\n                    {exactMovie.title} ({exactMovie.release_date.slice(0, 4)})\r\n                  </Title>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <Text>User Score: {exactMovie.vote_average * 10}%</Text>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <SemiTitle>Genre</SemiTitle>\r\n                  <Text>{exactMovie.genres.map(e => e.name).join(', ')}</Text>\r\n                </ListItem>\r\n                <ListItem>\r\n                  <SemiTitle>Overview</SemiTitle>\r\n                  <Text>{exactMovie.overview}</Text>\r\n                </ListItem>\r\n              </List>\r\n            </Container>\r\n            <DetailsNavigation\r\n              castMatch={`${match.url}/cast`}\r\n              reviewMatch={`${match.url}/reviews`}\r\n            />\r\n            <Switch>\r\n              <Route path={`${match.path}/cast`} component={Cast} />\r\n              <Route path={`${match.path}/reviews`} component={Reviews} />\r\n            </Switch>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport routes from '../routes';\nimport Layout from './Layout';\nimport HomePage from '../views/HomePage';\nimport MoviesPage from '../views/MoviesPage';\nimport MovieDetailsPage from '../views/MovieDetailsPage';\nimport '../base.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout>\n        <Switch>\n          <Route path={routes.home} exact component={HomePage} />\n          <Route path={routes.movieDetails} component={MovieDetailsPage} />\n          <Route path={routes.movies} component={MoviesPage} />\n          <Redirect to={routes.home} />\n        </Switch>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}